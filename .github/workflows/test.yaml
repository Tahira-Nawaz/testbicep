
name: Build and deploy 

env:
  AZURE_WEBAPP_NAME: tahira1234500nawaz00    # set this to the name of your Azure Web App
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '6.0.x'                # set this to the .NET Core version to use
  RESOURCE-GROUP: Tahira-rg-test
  LOCATION: westeurope
  TEMPLATE-FILE: .azure/bicep/webapp.bicep
  SUBSCRIPTION-ID: ${{ secrets.subscriptionId }}
on: [workflow_dispatch]
# on: [push, workflow_dispatch]
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      # - name: Set up dependency caching for faster builds
      #   uses: actions/cache@v3
      #   with:
      #     path: ~/.nuget/packages
      #     key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
      #     restore-keys: |
      #       ${{ runner.os }}-nuget-

      - name: Build with dotnet
        run: dotnet build --configuration Release

      - name: dotnet publish
        run: dotnet publish -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

          # upload the bicep template as artifacts for next job
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: bicep-template
          path: ${{ env.TEMPLATE-FILE }}  

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
      # url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app
          path: .net-app
      
  # Login in your azure subscription using a service principal (credentials stored as GitHub Secret in repo)
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
  # create resource group
      - name: Azure CLI Create resource group  
        uses: Azure/cli@1.0.4
        with:
          inlineScript: az group create -n ${{ env.RESOURCE-GROUP }} -l 'West Europe'    
  # Deploy Azure WebApp using Bicep file
      - name: deploy
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ env.SUBSCRIPTION-ID }}
          resourceGroupName: ${{ env.RESOURCE-GROUP }}
          template: ${{ env.TEMPLATE-FILE }}
          parameters: 'webAppName=${{ env.AZURE_WEBAPP_NAME }} location=${{ env.LOCATION }}'
          failOnStdErr: false   
  # publish content to Azure Web App
      - name: Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          package: .net-app
